/*
 * temp4 = server
 * temp5 = client
 * temp6 = client
 * temp7 = server
 * */

char * verifyTerminationOld(struct Packet *temp4, struct Packet *temp5, struct Packet *temp6, struct Packet *temp7, int temp_frame_number, const char *temp_src_port) {
    while (temp4 != NULL) {
        if (temp_frame_number < temp4->frameNumber && temp4->isMarked == false && strcmp(temp_src_port, temp4->dstPort) == 0 && strcmp(temp4->flag, "FIN, ACK") == 0) {
            while (temp5 != NULL) {
                if (temp4->frameNumber < temp5->frameNumber && temp4->isMarked == false && temp5->isMarked == false && strcmp(temp4->dstPort, temp5->srcPort) == 0 && strcmp(temp5->flag, "ACK") == 0) {
                    while (temp6 != NULL) {
                        if (temp5->frameNumber < temp6->frameNumber && temp4->isMarked == false && temp5->isMarked == false && temp6->isMarked == false && strcmp(temp5->srcPort, temp6->srcPort) == 0 && strcmp(temp5->dstPort, temp6->dstPort) == 0 && strcmp(temp6->flag, "FIN, ACK") == 0) {
                            while (temp7 != NULL) {
                                if (temp6->frameNumber < temp7->frameNumber && temp4->isMarked == false && temp5->isMarked == false && temp6->isMarked == false && temp7->isMarked == false && strcmp(temp6->srcPort, temp7->dstPort) == 0 && strcmp(temp6->dstPort, temp7->srcPort) == 0 && strcmp(temp7->flag, "ACK") == 0) {
                                    temp4 -> isMarked = true;
                                    temp5 -> isMarked = true;
                                    temp6 -> isMarked = true;
                                    temp7 -> isMarked = true;

//                                    printPacket(temp4);
//                                    printPacket(temp5);
//                                    printPacket(temp6);
//                                    printPacket(temp7);

                                    char *_4WHSFIN = malloc(sizeof(u_char) * 20);
                                    sprintf(_4WHSFIN, "%d %s", temp7 -> frameNumber, temp7 -> dstPort);
                                    return _4WHSFIN;
                                }
                                temp7 = temp7->next;
                            }
                        }
                        temp6 = temp6->next;
                    }
                }
                temp5 = temp5->next;
            }
        }
        temp4 = temp4->next;
    }
    char *no4WHS = malloc(sizeof(u_char) * 20);
    strcpy(no4WHS, "0 0");
    return no4WHS;
}